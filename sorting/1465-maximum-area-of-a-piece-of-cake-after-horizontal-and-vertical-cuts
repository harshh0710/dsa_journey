class Solution {
public:
    int maxArea(int h, int w, vector<int>& horizontalCuts,vector<int>& verticalCuts){
        const int MOD=1e9+7;
        
        sort(horizontalCuts.begin(),horizontalCuts.end());
        sort(verticalCuts.begin(),verticalCuts.end());

        int maxHorizontalGap=max(horizontalCuts[0],h-horizontalCuts.back());
        for(int i=1;i<horizontalCuts.size();i++){
            maxHorizontalGap=max(maxHorizontalGap,horizontalCuts[i]-horizontalCuts[i-1]);
        }

        int maxVerticalGap=max(verticalCuts[0],w-verticalCuts.back());
        for(int i=1;i<verticalCuts.size();i++){
            maxVerticalGap=max(maxVerticalGap,verticalCuts[i]-verticalCuts[i-1]);
        }
        return(1LL*maxHorizontalGap*maxVerticalGap)%MOD;
    }
};
